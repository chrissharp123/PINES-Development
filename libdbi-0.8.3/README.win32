
libdbi - Database Independent Abstraction Layer for C
Copyright (C) 2001-2005, David Parker and Mark Tobenkin.
http://libdbi.sourceforge.net

WINDOWS-SPECIFIC INSTALLATION INSTRUCTIONS
==========================================

libdbi can be compiled on any 32bit Windows platform. There's two
different methods. Choose the one that better suits your needs.

1) Cygwin

The Cygwin tools (http://www.cygwin.com/) add a POSIX layer to Windows
and provide, by shipping a comprehensive selection of familiar Unix
tools including bash and X.org, the cozy environment of a Unix
box. Choose Cygwin if you want to port Unix applications to Win32 with
the least amount of code changes. All Cygwin applications need at
least access to the cygwin1.dll which translates the Unix API calls
into Win32 API calls at runtime. libdbi drivers require the Cygwin
versions of their client libraries.

2) Mingw

The Mingw environment (http://www.mingw.org) provide a minimal GNU
environment on Windows. Choose Mingw if you want to build native Win32
applications that do not depend on other third-party libraries. libdbi
drivers require the native Win32 versions of their client libraries.


1. WINDOWS-SPECIFIC INSTALLATION INSTRUCTIONS FOR CYGWIN:
---------------------------------------------------------

libdbi can be compiled into DLL files on Win32 with
the Cygwin package, available at http://www.cygwin.com/. How much
bending over backwards is required depends on the versions of your
Cygwin installation. As of this writing, the following version numbers
were all fresh:

base-files-3.5.1
binutils-20050610
cygwin-1.5.18
gcc-3.4.4
libtool-1.5b

With these tools, the Unix trinity is all it takes:
./configure
make
make install

If this procedure fails to create the file

/usr/local/bin/cygdbi-0.dll

you most likely run older versions of the Cygwin tools. You're not
lost, though. Run the following commands and you should be all set:

make -f Makefile.w32
make -f Makefile.w32 install

The name of the dll file will be different from the one above, but it
is going to work anyway.


USAGE:
------

Once libdbi is compiled for Win32 and you have a DLL, you can use that DLL like
any other. The only requirement is that the Cygwin runtime DLL is available on
the target machine also, since non-Windows API functions are implemented by
Cygwin.


2. WINDOWS-SPECIFIC INSTALLATION INSTRUCTIONS FOR MINGW+MSYS:
-------------------------------------------------------------
libdbi can be compiled into static library libdbi.a on Win32 with
the Mingw and MSys packages, available at http://www.mingw.org

	(say, libdbi-x.x.x.tar.gz distribution is in C: drive.)
	cd /usr/local/src
	cp /c/libdbi-x.x.x.tar.gz .
	tar xvzf libdbi-x.x.x.tar.gz
	cd libdbi-x.x.x
	./configure --prefix=/usr
	make
	make install


MSYS DETAILS:
---------------

Download (from www.mingw.org) and install mingw, msys and msysDTK
(not essentially required, but recommended) from http://www.mingw.org.




MODIFICATIONS AND REDISTRIBUTION (LGPL):
----------------------------------------

This library is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option) any
later version.

This library is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
details.

See the file COPYING or http://www.gnu.org for more details.


$Id: README.win32,v 1.7 2005/08/25 20:24:29 mhoenicka Exp $

